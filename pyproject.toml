[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "authx_extra"
description = "Extra utilities for authx, including session, profiler & caching âœ¨"
readme = "README.md"
requires-python = ">=3.8"
license = "MIT"
authors = [
    { name = "Yasser Tahiri", email = "hello@yezz.me" },
]
keywords = [
    "FastAPI",
    "Authentication",
    "Oauth2",
    "Pydantic",
    "JWT",
    "Cookie"
]

classifiers = [
    "License :: OSI Approved :: MIT License",
    "Development Status :: 5 - Production/Stable",
    "Operating System :: OS Independent",
    "Intended Audience :: Developers",
    "Intended Audience :: Information Technology",
    "Framework :: FastAPI",
    "Framework :: AsyncIO",
    "Framework :: Pydantic",
    "Framework :: Pydantic :: 2",
    "Programming Language :: Python",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3 :: Only",
    "Topic :: Internet :: WWW/HTTP :: Session",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Topic :: Internet",
    "Typing :: Typed",
]

dependencies = [
    "authx>=1.1.0,<2.0.0",
    "redis>=4.3.3,<5.0.5",
    "prometheus-client>=0.16.0,<1.0.0",
    "pyinstrument>=4.1.1,<4.7.0",
]

dynamic = ["version"]

[tool.hatch.metadata]
allow-direct-references = true

[project.urls]
Homepage = "https://github.com/yezz123/authx_extra"
Documentation = "https://authx.yezz.me/installation/#extra-dependencies"
Funding = 'https://github.com/sponsors/yezz123'

[tool.hatch.version]
path = "authx_extra/__init__.py"


[tool.ruff.lint]
mccabe = { max-complexity = 14 }
select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "I",  # isort
    "C",  # flake8-comprehensions
    "B",  # flake8-bugbear
]
ignore = [
    "E501"  # line too long, handled by black
]

[tool.ruff.lint.per-file-ignores]
"__init__.py" = ["F401"]
"tests/test_cache.py" = ["F841", "F811"]
"session.py" = ["B008"]

[tool.ruff.lint.isort]
known-third-party = ["pydantic", "typing_extensions", "sqlalchemy"]

[tool.ruff.lint.pyupgrade]
keep-runtime-typing = true

[tool.coverage.run]
source = ["authx_extra", "tests"]
branch = true
context = '${CONTEXT}'

[tool.coverage.paths]
source = [
    'authx_extra/',
    '/Users/runner/work/authx_extra/authx_extra/authx_extra/',
    'D:\a\authx_extra\authx_extra\authx_extra',
]

[tool.coverage.report]
precision = 2
exclude_lines = [
    'pragma: no cover',
    'raise NotImplementedError',
    'if TYPE_CHECKING:',
    '@overload',
]

[tool.mypy]
strict = true
plugins = 'pydantic.mypy'


[tool.pytest.ini_options]
testpaths = 'tests'
log_cli = "1"
log_cli_level = "INFO"
log_cli_format = "%(asctime)s [%(levelname)8s] %(message)s (%(filename)s:%(lineno)s)"
log_cli_date_format= "%Y-%m-%d %H:%M:%S"
asyncio_mode= "auto"
filterwarnings = [
    'error',
    'ignore::DeprecationWarning',
]
